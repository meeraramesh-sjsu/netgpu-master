#!/bin/sh

PATH_TO_MODULES="_netgpu_path_/Analysis/Modules/"

#Setting result and temporary files 
FILE=.tmp_dmodule.ppph
RESULT_FILE=.dmodule.ppph
RAW_TEXT_FILE=.tmp_dmodule_raw_text

#Erasing content of file
echo -n > $FILE

#Getting all lib files
MODULES=`find $PATH_TO_MODULES -name *.module`

#Start of file
echo "/* Autogenerated code by dmodule.sh */" > $RESULT_FILE
echo "/* Loads dynamically libraries(.lib files) used in the analysis. Do not erase or modify. */" >> $RESULT_FILE
echo "#ifdef __CUDACC__" >> $RESULT_FILE

#Getting raw text
cpp -D __CUDACC__ -D DONT_EXPAND_SYNCBLOCKS -nostdinc $1  2>/dev/null > $RAW_TEXT_FILE
	
for MODULE in $MODULES
do

	#look for \#\#\#DONT_LOAD PATTERN
	if [ `cat $MODULE | grep \#\#\#DONT_LOAD | wc -w` -gt 0   ]; then 
		continue
	fi

	#gets for patterns to be searched
	PATTERNS=`cat $MODULE | grep \#\#\#PATTERNS `	

	#erase ppp order (\#\#\#PATTERNS )
	PATTERNS=`echo $PATTERNS | cut -d " " -f2-`	
	
	if [ `echo $PATTERNS | wc -w` -eq 0  ]; then 
		#try misspelled ppp order
		PATTERNS=`cat $MODULE | grep \#\#\#PATTERN `	
		#erase ppp order (\#\#\#PATTERNS )
		PATTERNS=`echo $PATTERNS | cut -d " " -f2-`	
	fi

	#define some temporary
	TMP_FILE_TO_SORT=.tmp_file_to_sort
	SORTED_FILE=.tmp_sorted
	
	#erase content of temporary file
	echo -n > $TMP_FILE_TO_SORT

	#Try to find patterns in $1 file
	for PATTERN in $PATTERNS
	do
		CALLS=`cat $RAW_TEXT_FILE | grep $PATTERN | wc -w`
		
		if [ $CALLS -gt 0 ]; then	
			LINE_NUMBER=`cat $RAW_TEXT_FILE | grep -n $PATTERN | awk -F ":" '{ print $1 }'`
			echo $LINE_NUMBER":#include \"$MODULE\"" >> $TMP_FILE_TO_SORT
		fi
	done
		
	#Sort $TO_INCLUDE_TMP
	#define stupid temporaryFile because sort this don't work

	cat $TMP_FILE_TO_SORT | sort > $SORTED_FILE

	#erase duplicates (gets 1st appearence line and include library)
	cat $SORTED_FILE | head -n 1 > $TMP_FILE_TO_SORT	

	#add to $FILE
	cat $TMP_FILE_TO_SORT >> $FILE
done
	
#Sort by line number & erase line number
cat $FILE | sort | awk -F ":" '{ print $2 } ' >> $RESULT_FILE

#output info
echo "[Loading MODULES]"
cat $FILE | sort | awk -F ":" '{ print $2 } ' | cut -d "\"" -f 2 
#echo "[end]"

#End of file
echo "#endif //__CUDACC__" >> $RESULT_FILE

rm -f $FILE $RAW_TEXT_FILE $SORTED_FILE $TMP_FILE_TO_SORT > /dev/null 2>/dev/null

