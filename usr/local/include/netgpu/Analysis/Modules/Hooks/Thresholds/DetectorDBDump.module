/* 
	MODULE:Rates DB dumper 
	TYPE: Hook

	PrePreprocessor orders (ppp.sh):

	###PATTERNS $DETECTOR$DB_DUMPER$DUMP_ALARMS(

*/

//#warning  Detector Database Dumper Hook loaded

#include <iostream>
#include <sstream>
#include "../hostTimeUtils.h"

using namespace std;

#define $DETECTOR$DB_DUMPER$PREPARE_TO_DUMP_ALARMS()\
	$DETECTOR$DB_DUMPER$PREPARE_TO_DUMP_ALARMS_TO_DBTABLE(STR(ANALYSIS_NAME))


#define $DETECTOR$DB_DUMPER$PREPARE_TO_DUMP_ALARMS_TO_DBTABLE(tableName)\
	do{\
		int i,j;\
		bool hasResults;\
		stringstream total;\
		stringstream fixed;\
		static string to_db;\
		fixed <<"INSERT INTO "<<tableName<<" ";\
		stringstream tmp_ids;\
		stringstream tmp_values;\
		\
		for(i = 0,hasResults = false;i<state.windowState.totalNumberOfBlocks;i++){\
			for(j = 0;j<auxBlocks[i];j++,total.str(""),tmp_values.str(""),tmp_ids.str("")){\
			if(results[i].rate > 0){\
				hasResults = true;\
				tmp_ids<<"counter,starttime,endtime,dumped";\
				tmp_values<<results[i*ANALYSIS_TPB+j].counter<<","<<state.windowState.windowStartTime.tv_sec<<","<<state.windowState.windowEndTime.tv_sec<<",NOW()"






#define $DETECTOR$DB_DUMPER$DUMP_ALARMS()\
				total<<fixed.str()<<" ("<<tmp_ids.str()<<") values ("<<tmp_values.str()<<");";\
				to_db =  (total.str());\
				ANALYSIS_NAME::queryManager.scheduleQuery(to_db.c_str());\
				}\
			}\
		}\
		if(hasResults){\
			ANALYSIS_NAME::queryManager.executePackedQuerys();\
		}\
	}while(0)


//Simple types
#define $DETECTOR$DB_DUMPER$ADD_FIELD(mappingToDB)\
	tmp_ids<<","<<STR(mappingToDB);\
	tmp_values<<","<<results[i*ANALYSIS_TPB+j].user

#define $DETECTOR$DB_DUMPER$ADD_FIELD_AS_IP(mappingToDB)\
	tmp_ids<<","<<STR(mappingToDB);\
	tmp_values<<",CAST("<<results[i*ANALYSIS_TPB+j].user<<" as bit(32))"


//Structure types
#define $DETECTOR$DB_DUMPER$ADD_FIELD_COMPLEX(field,mappingToDB)\
	tmp_ids<<","<<STR(mappingToDB);\
	tmp_values<<","<<results[i*ANALYSIS_TPB+j].user.field

#define $DETECTOR$DB_DUMPER$ADD_FIELD_AS_IP_COMPLEX(field,mappingToDB)\
	tmp_ids<<","<<STR(mappingToDB);\
	tmp_values<<",CAST("<<results[i*ANALYSIS_TPB+j].user.field<<" as bit(32))"



